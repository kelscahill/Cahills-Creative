{
  "name": "grunt-regex-check",
  "description": "Grunt plugin to detect illegal expressions in javascript code with regular expressions",
  "version": "0.1.6",
  "homepage": "https://github.com/thekua/grunt-regex-check",
  "author": {
    "name": "Patrick Kua",
    "email": "pkua@thoughtworks.com",
    "url": "http://www.thekua.com/atwork"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thekua/grunt-regex-check.git"
  },
  "bugs": {
    "url": "https://github.com/thekua/grunt-regex-check/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/thekua/grunt-regex-check/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt": "~0.4.1",
    "grunt-mocha-test": "~0.2.2",
    "should": "~1.2.2",
    "sinon": "~1.6.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "gitHead": "7d6c44c4165fa132c2c2e86fbc76fb1ec1089e1b",
  "readme": "# grunt-regex-check\n\n> Grunt plugin to detect illegal expressions in javascript code with regular expressions\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-regex-check --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-regex-check');\n```\n\n## The \"\"regex-check\"\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `\"regex-check\"` to the data object passed into `grunt.initConfig()`.\n\n### Options\n\n#### options.excluded\nType: `String`\nDefault value: none\nMandatory: No\n\nA string value that is used to do something with whatever.\n\n#### options.pattern\nType: `Regular expression`\nDefault value: none\nMandatory: Yes\n\nA string value that is used to do something else with whatever else.\n\n### Usage Examples\n\n#### Options\n\n_Note that there are no default options and you must specify the configuration values_\n\nIn this example, the configuration is looking through all javascript files in 'src', except for those excluded ones\nand will fail the build if the string 'console' is found\n\nExample: Check all source files to ensure they do not contain `console`. Exclude those that have excluded in the file name\n\n```js\ngrunt.initConfig({\n  \"regex-check\": {\n    files: \"src/**/*.js\",\n    options: {\n      excluded : \"src/**/*xcluded.js\",\n      pattern : /console/g\n    },\n  },\n})\n```\n\nExample: Check all files in `src/server` and `src/logger` to ensure they do not contain `throw` or `catch`. Exclude three specific files\n\n```js\ngrunt.initConfig({\n  \"regex-check\": {\n    files: [\"src/server/**/*.js\", \"src/logger/**/*.js\"],\n    options: {\n      excluded : [\"src/server/ajax/requestErrors.js\", \"src/logger/defaultErrorLogger.js\", \"src/server/jqueryPluginWrapper.js\"],\n      pattern : /(throw)|(catch)/g\n    },\n  },\n})\n```\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n- 0.1.5 Apply pull request to use grunt fail warn\n- 0.1.4 Apply pull request to remove dependency on underscore\n- 0.1.3 Bump version to update documentation and keep release in sync\n- 0.1.2 Apply pull request to note which pattern caused the violation per file\n- 0.1.1 Fix bug of \"Cannot call method 'indexOf' of undefined\" when you do not specify any exclusions\n- 0.1.0 Initial release\n\n## Future Enhancements\n\n- Move pattern outside of options\n- Support another configuration in the same file (e.g. another file set with a particular string)\n",
  "readmeFilename": "README.md",
  "_id": "grunt-regex-check@0.1.6",
  "_shasum": "e618ec8d52e2758e688113fa37f09ad3b865d6c6",
  "_from": "git+http://git@github.com/dwarcher/grunt-regex-check.git",
  "_resolved": "git+ssh://git@github.com/dwarcher/grunt-regex-check.git#7d6c44c4165fa132c2c2e86fbc76fb1ec1089e1b"
}
